/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import DTO.UsuarioDTO;
import java.awt.event.ActionEvent;
import java.io.File;
import java.net.URL;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.Map;
import javax.help.HelpBroker;
import javax.help.HelpSet;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author JETTSUSHD
 */
public class GestionInformes extends javax.swing.JFrame {

    /**
     * Creates new form GestionInformes
     */
    UsuarioDTO usuario;
    
    private HelpSet helpSet;
    private HelpBroker helpBroker;


    public GestionInformes(UsuarioDTO usuario) {
        this.usuario = usuario;

        initComponents();
        setLocationRelativeTo(null);
        setExtendedState(MAXIMIZED_BOTH);
        // Capturar evento al cerrar la ventana con "X"
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                dispose();
                new GestionVentas(usuario).setVisible(true);
            }
        });
        
        initHelp();
        ejecutarF1();
        
        setResizable(false);
    }

    
private void initHelp() {
        try {
            // Obtener el recurso desde el classpath
            ClassLoader cl = this.getClass().getClassLoader();
            URL hsURL = cl.getResource("help/help_set.hs");

            if (hsURL == null) {
                System.out.println("No se encontró el archivo de ayuda en el classpath.");
                return;
            }

            System.out.println("Archivo de ayuda encontrado en: " + hsURL);

            // Cargar el HelpSet
            helpSet = new HelpSet(cl, hsURL);
            helpBroker = helpSet.createHelpBroker();

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void ejecutarF1() {
        KeyStroke f1KeyStroke = KeyStroke.getKeyStroke("F1");
        Action helpAction = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                miAyudaActionPerformed(null); // Ejecuta el mismo evento del botón
            }
        };

        // Asignar la acción al panel principal (ventana) para que funcione en cualquier parte
        this.getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(f1KeyStroke, "help");
        this.getRootPane().getActionMap().put("help", helpAction);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        bTodosProductos = new javax.swing.JButton();
        bGrafico = new javax.swing.JButton();
        chPDF = new javax.swing.JCheckBox();
        chHTML = new javax.swing.JCheckBox();
        jMenuBar1 = new javax.swing.JMenuBar();
        mArchivo = new javax.swing.JMenu();
        miVolver = new javax.swing.JMenuItem();
        mAyuda = new javax.swing.JMenu();
        miAyuda = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        bTodosProductos.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        bTodosProductos.setText("Exportar todos los productos");
        bTodosProductos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bTodosProductosActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(bTodosProductos, gridBagConstraints);

        bGrafico.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        bGrafico.setText("Exportar productos con grafico");
        bGrafico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bGraficoActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(13, 0, 0, 0);
        getContentPane().add(bGrafico, gridBagConstraints);

        chPDF.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        chPDF.setText("PDF");
        chPDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chPDFActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(13, 0, 0, 0);
        getContentPane().add(chPDF, gridBagConstraints);

        chHTML.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        chHTML.setText("HTML");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(13, 0, 0, 0);
        getContentPane().add(chHTML, gridBagConstraints);

        mArchivo.setText("Archivo");
        mArchivo.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N

        miVolver.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        miVolver.setText("Volver");
        miVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miVolverActionPerformed(evt);
            }
        });
        mArchivo.add(miVolver);

        jMenuBar1.add(mArchivo);

        mAyuda.setText("Ayuda");
        mAyuda.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N

        miAyuda.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        miAyuda.setText("Acerca de");
        miAyuda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miAyudaActionPerformed(evt);
            }
        });
        mAyuda.add(miAyuda);

        jMenuBar1.add(mAyuda);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bGraficoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bGraficoActionPerformed
        // TODO add your handling code here:
        String reportSource = "./src/main/java/Informes/ProductosVendidosPorVendedor.jrxml";
        String reportCompilado = "./src/main/java/Informes/ProductosVendidosPorVendedor.jasper";
        String reporthtml = "./src/main/java/Informes/ProductosVendidosPorVendedor.html";
        String reportpdf = "./src/main/java/Informes/ProductosVendidosPorVendedor.pdf";
        JasperReport reporte;
        File file = new File(reportCompilado);

        Map<String, Object> params = new HashMap<String, Object>();
        params.put("titulo", "listado");
        try {
            Class.forName("org.sqlite.JDBC");
            Connection conexion = DriverManager.getConnection("jdbc:sqlite:.\\src\\main\\resources\\database\\ventas.db", "", "");
            if (!file.exists()) {
                JasperCompileManager.compileReportToFile(reportSource, reportCompilado);
                reporte = JasperCompileManager.compileReport(reportSource);

            } else {
                reporte = (JasperReport) JRLoader.loadObjectFromFile(reportCompilado);
            }
            JasperPrint miInforme = JasperFillManager.fillReport(reporte, params, conexion);
            //JasperViewer.viewReport(miInforme);
            if (chHTML.isSelected()) {
                JasperExportManager.exportReportToHtmlFile(miInforme, reporthtml);
                System.out.println("Se ha exportado a html correctamente");
            }
            if (chPDF.isSelected()) {
                JasperExportManager.exportReportToPdfFile(miInforme, reportpdf);
                System.out.println("Se ha exportado a pdf correctamente");
            } else {
                System.out.println("Debe seleccionar un archivo al que exportar");
            }
            if (chHTML.isSelected() || chPDF.isSelected()) {
                JasperViewer.viewReport(miInforme);
            } else {
                JOptionPane.showMessageDialog(this, "No seleccionaste ningun tipo de extension", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (ClassNotFoundException e) {
            System.out.println("Error en driver");
        } catch (SQLException e) {
            System.out.println("Error en sentencia SQL");
        } catch (Exception e) {
            System.out.println("Error en Jasper");
            e.printStackTrace();
        }

    }//GEN-LAST:event_bGraficoActionPerformed

    private void chPDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chPDFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chPDFActionPerformed

    private void bTodosProductosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bTodosProductosActionPerformed
        // TODO add your handling code here:
        String reportSource = "./src/main/java/Informes/TodasVentas.jrxml";
        String reportCompilado = "./src/main/java/Informes/TodasVentas.jasper";
        String reporthtml = "./src/main/java/Informes/TodasVentas.html";
        String reportpdf = "./src/main/java/Informes/TodasVentas.pdf";
        JasperReport reporte;
        File file = new File(reportCompilado);

        Map<String, Object> params = new HashMap<String, Object>();
        params.put("titulo", "listado");
        try {
            Class.forName("org.sqlite.JDBC");
            Connection conexion = DriverManager.getConnection("jdbc:sqlite:.\\src\\main\\resources\\database\\ventas.db", "", "");
            if (!file.exists()) {
                JasperCompileManager.compileReportToFile(reportSource, reportCompilado);
                reporte = JasperCompileManager.compileReport(reportSource);

            } else {
                reporte = (JasperReport) JRLoader.loadObjectFromFile(reportCompilado);
            }
            JasperPrint miInforme = JasperFillManager.fillReport(reporte, params, conexion);
            //JasperViewer.viewReport(miInforme);
            if (chHTML.isSelected()) {
                JasperExportManager.exportReportToHtmlFile(miInforme, reporthtml);
                System.out.println("Se ha exportado a html correctamente");
            }
            if (chPDF.isSelected()) {
                JasperExportManager.exportReportToPdfFile(miInforme, reportpdf);
                System.out.println("Se ha exportado a pdf correctamente");
            } else {
                System.out.println("Debe seleccionar un archivo al que exportar");
            }
            if (chHTML.isSelected() || chPDF.isSelected()) {
                JasperViewer.viewReport(miInforme);
            } else {
                JOptionPane.showMessageDialog(this, "No seleccionaste ningun tipo de extension", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (ClassNotFoundException e) {
            System.out.println("Error en driver");
        } catch (SQLException e) {
            System.out.println("Error en sentencia SQL");
        } catch (Exception e) {
            System.out.println("Error en Jasper");
            e.printStackTrace();
        }

    }//GEN-LAST:event_bTodosProductosActionPerformed

    private void miAyudaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miAyudaActionPerformed
// TODO add your handling code here:
        if (helpBroker != null) {
            helpBroker.setDisplayed(true);
        } else {
            System.out.println("El sistema de ayuda no está disponible.");
        }    }//GEN-LAST:event_miAyudaActionPerformed

    private void miVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miVolverActionPerformed
        // TODO add your handling code here:
        dispose();
        new GestionVentas(usuario).setVisible(true);
    }//GEN-LAST:event_miVolverActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GestionInformes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GestionInformes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GestionInformes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GestionInformes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GestionInformes(null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bGrafico;
    private javax.swing.JButton bTodosProductos;
    private javax.swing.JCheckBox chHTML;
    private javax.swing.JCheckBox chPDF;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu mArchivo;
    private javax.swing.JMenu mAyuda;
    private javax.swing.JMenuItem miAyuda;
    private javax.swing.JMenuItem miVolver;
    // End of variables declaration//GEN-END:variables
}
